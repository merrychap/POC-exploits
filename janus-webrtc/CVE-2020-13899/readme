[ Description ]
An issue was discovered in janus-gateway (aka Janus WebRTC Server) through 0.10.0.
janus_process_incoming_request in janus.c discloses information from uninitialized stack memory.

Link to vulnerable code [1]: https://github.com/meetecho/janus-gateway/blob/v0.10.0/janus.c#L1326

[Vulnerability Type]
Stack Memory Leak (CWE-200, CWE-457, CWE-665, CWE-909)

[Affected Code Base]
janus-gateway (https://github.com/meetecho/janus-gateway) - Affected: v0.9.0-v0.10.0

[Affected Component]
affected source code file: /janus-gateway/janus.c
affected function: janus_process_incoming_request
affected executable: janus

[Attack Type]
Remote

[Impact]
Possible leak of data that resides inside of the stack

[Attack Vectors]
The vulnerability itself is an uninitialized buffer for the error
string that is then passed into "janus_sdp_preparse" function. And if
the returned "parsed_sdp" is NULL, then "error_str" is transferred
to the user.

In order to exploit it, an attacker must send a "message" request to
janus with "jsep" specified. "jsep" itself should contain invalid SDP
request with a long (more than 16 bytes) audio media-level attribute
value. It forces "janus_sdp_preparse" to return "NULL" and the error
string is left untouched. But because of "json_string" function in
"janus_process_error_string" not every data can be transferred to
user: i.e., not-null string that satisfies "utf8_check_string"
function
